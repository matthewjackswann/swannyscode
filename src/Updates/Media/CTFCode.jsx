const SpacePiratesChallenge = `<pre class="syntax--editor syntax--editor-colors"><div class="line" data-screen-row="0"><span class=""><span class="syntax--source syntax--python"><span class="syntax--keyword syntax--control">from</span> sympy <span class="syntax--keyword syntax--control">import</span> <span class="syntax--keyword syntax--operator">*</span></span></span></div><div class="line" data-screen-row="1"><span class=""><span class="syntax--source syntax--python"><span class="syntax--keyword syntax--control">from</span> hashlib <span class="syntax--keyword syntax--control">import</span> md5</span></span></div><div class="line" data-screen-row="2"><span class=""><span class="syntax--source syntax--python"><span class="syntax--keyword syntax--control">from</span> Crypto.Cipher <span class="syntax--keyword syntax--control">import</span> AES</span></span></div><div class="line" data-screen-row="3"><span class=""><span class="syntax--source syntax--python"><span class="syntax--keyword syntax--control">from</span> Crypto.Util.Padding <span class="syntax--keyword syntax--control">import</span> pad</span></span></div><div class="line" data-screen-row="4"><span class=""><span class="syntax--source syntax--python"><span class="syntax--keyword syntax--control">from</span> random <span class="syntax--keyword syntax--control">import</span> randint<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> randbytes<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> seed</span></span></div><div class="line" data-screen-row="5"><span class=""><span class="syntax--source syntax--python"><span class="syntax--keyword syntax--control">from</span> Crypto.Util.number <span class="syntax--keyword syntax--control">import</span> bytes_to_long</span></span></div><div class="line" data-screen-row="6"><span class=""></span> </div><div class="line" data-screen-row="7"><span class=""><span class="syntax--source syntax--python">FLAG <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--string syntax--quoted">"HTB{dummyflag}"</span>.<span class="syntax--entity syntax--name syntax--function">encode</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--string syntax--quoted">'ascii'</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="8"><span class=""><span class="syntax--source syntax--python"><span class="syntax--storage syntax--type syntax--class">class</span> <span class="syntax--entity syntax--name syntax--type syntax--class">Shamir</span>:</span></span></div><div class="line" data-screen-row="9"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--storage syntax--type syntax--function">def</span> <span class="syntax--entity syntax--name syntax--function syntax--definition">__init__</span><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--variable syntax--parameter syntax--function">self</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--variable syntax--parameter syntax--function">prime</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--variable syntax--parameter syntax--function">k</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--variable syntax--parameter syntax--function">n</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span>:</span></span></div><div class="line" data-screen-row="10"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--entity syntax--name syntax--variable syntax--self">self</span>.<span class="syntax--variable syntax--other syntax--object syntax--property">p</span> <span class="syntax--keyword syntax--operator">=</span> prime</span></span></div><div class="line" data-screen-row="11"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--entity syntax--name syntax--variable syntax--self">self</span>.<span class="syntax--variable syntax--other syntax--object syntax--property">secret</span> <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--entity syntax--name syntax--function syntax--call">randint</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--constant syntax--numeric">1</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span><span class="syntax--entity syntax--name syntax--variable syntax--self">self</span>.<span class="syntax--variable syntax--other syntax--object syntax--property">p</span><span class="syntax--keyword syntax--operator">-</span><span class="syntax--constant syntax--numeric">1</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="13"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--entity syntax--name syntax--variable syntax--self">self</span>.<span class="syntax--variable syntax--other syntax--object syntax--property">n</span> <span class="syntax--keyword syntax--operator">=</span> n</span></span></div><div class="line" data-screen-row="14"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--entity syntax--name syntax--variable syntax--self">self</span>.<span class="syntax--variable syntax--other syntax--object syntax--property">coeffs</span> <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span><span class="syntax--entity syntax--name syntax--variable syntax--self">self</span>.<span class="syntax--variable syntax--other syntax--object syntax--property">secret</span><span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span></span></span></div><div class="line" data-screen-row="15"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--entity syntax--name syntax--variable syntax--self">self</span>.<span class="syntax--variable syntax--other syntax--object syntax--property">x_vals</span> <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span><span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span></span></span></div><div class="line" data-screen-row="16"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--entity syntax--name syntax--variable syntax--self">self</span>.<span class="syntax--variable syntax--other syntax--object syntax--property">y_vals</span> <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span><span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span></span></span></div><div class="line" data-screen-row="17"><span class=""><span class="syntax--source syntax--python"><span class="trailing-whitespace"> </span></span></span></div><div class="line" data-screen-row="19"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--keyword syntax--control">return</span> <span class="syntax--support syntax--function syntax--call">int</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--entity syntax--name syntax--function syntax--call">md5</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>val.<span class="syntax--entity syntax--name syntax--function">to_bytes</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--constant syntax--numeric">32</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--variable syntax--parameter syntax--function">byteorder</span><span class="syntax--keyword syntax--operator">=</span><span class="syntax--string syntax--quoted">"big"</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span>.<span class="syntax--entity syntax--name syntax--function">hexdigest</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span><span class="syntax--constant syntax--numeric">16</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="20"><span class=""><span class="syntax--source syntax--python"><span class="trailing-whitespace"> </span></span></span></div><div class="line" data-screen-row="21"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--storage syntax--type syntax--function">def</span> <span class="syntax--entity syntax--name syntax--function syntax--definition">calc_coeffs</span><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--variable syntax--parameter syntax--function">self</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span>:</span></span></div><div class="line" data-screen-row="22"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--keyword syntax--control">for</span> i <span class="syntax--keyword syntax--operator syntax--logical syntax--python">in</span> <span class="syntax--support syntax--function syntax--call">range</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--constant syntax--numeric">1</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span><span class="syntax--entity syntax--name syntax--variable syntax--self">self</span>.<span class="syntax--variable syntax--other syntax--object syntax--property">n</span><span class="syntax--keyword syntax--operator">+</span><span class="syntax--constant syntax--numeric">1</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span>:</span></span></div><div class="line" data-screen-row="23"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span><span class="syntax--entity syntax--name syntax--variable syntax--self">self</span>.<span class="syntax--variable syntax--other syntax--object syntax--property">coeffs</span>.<span class="syntax--entity syntax--name syntax--function">append</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--entity syntax--name syntax--variable syntax--self">self</span>.<span class="syntax--entity syntax--name syntax--function">next_coeff</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--entity syntax--name syntax--variable syntax--self">self</span>.<span class="syntax--variable syntax--other syntax--object syntax--property">coeffs</span><span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span>i<span class="syntax--keyword syntax--operator">-</span><span class="syntax--constant syntax--numeric">1</span><span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="26"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span>y <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--constant syntax--numeric">0</span></span></span></div><div class="line" data-screen-row="27"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--keyword syntax--control">for</span> i<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> coeff <span class="syntax--keyword syntax--operator syntax--logical syntax--python">in</span> <span class="syntax--support syntax--function syntax--call">enumerate</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--entity syntax--name syntax--variable syntax--self">self</span>.<span class="syntax--variable syntax--other syntax--object syntax--property">coeffs</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span>:</span></span></div><div class="line" data-screen-row="28"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span>y <span class="syntax--keyword syntax--operator">+=</span> coeff <span class="syntax--keyword syntax--operator">*</span> x <span class="syntax--keyword syntax--operator">**</span> i</span></span></div><div class="line" data-screen-row="29"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--keyword syntax--control">return</span> y <span class="syntax--keyword syntax--operator">%</span> <span class="syntax--entity syntax--name syntax--variable syntax--self">self</span>.<span class="syntax--variable syntax--other syntax--object syntax--property">p</span></span></span></div><div class="line" data-screen-row="30"><span><span class="syntax--source syntax--python"><span class="trailing-whitespace"> </span></span></span></div><div class="line" data-screen-row="31"><span class=""><span class="syntax--source syntax--python"><span class="trailing-whitespace"> </span></span></span></div><div class="line" data-screen-row="32"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--storage syntax--type syntax--function">def</span> <span class="syntax--entity syntax--name syntax--function syntax--definition">create_pol</span><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--variable syntax--parameter syntax--function">self</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span>:</span></span></div><div class="line" data-screen-row="33"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--entity syntax--name syntax--variable syntax--self">self</span>.<span class="syntax--entity syntax--name syntax--function">calc_coeffs</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="34"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--entity syntax--name syntax--variable syntax--self">self</span>.<span class="syntax--variable syntax--other syntax--object syntax--property">coeffs</span> <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--entity syntax--name syntax--variable syntax--self">self</span>.<span class="syntax--variable syntax--other syntax--object syntax--property">coeffs</span><span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span>:<span class="syntax--entity syntax--name syntax--variable syntax--self">self</span>.<span class="syntax--variable syntax--other syntax--object syntax--property">k</span><span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span></span></span></div><div class="line" data-screen-row="35"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--keyword syntax--control">for</span> i <span class="syntax--keyword syntax--operator syntax--logical syntax--python">in</span> <span class="syntax--support syntax--function syntax--call">range</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--entity syntax--name syntax--variable syntax--self">self</span>.<span class="syntax--variable syntax--other syntax--object syntax--property">n</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span>:</span></span></div><div class="line" data-screen-row="36"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span>x <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--entity syntax--name syntax--function syntax--call">randint</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--constant syntax--numeric">1</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span><span class="syntax--entity syntax--name syntax--variable syntax--self">self</span>.<span class="syntax--variable syntax--other syntax--object syntax--property">p</span><span class="syntax--keyword syntax--operator">-</span><span class="syntax--constant syntax--numeric">1</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="37"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span><span class="syntax--entity syntax--name syntax--variable syntax--self">self</span>.<span class="syntax--variable syntax--other syntax--object syntax--property">x_vals</span>.<span class="syntax--entity syntax--name syntax--function">append</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>x<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="38"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span><span class="syntax--entity syntax--name syntax--variable syntax--self">self</span>.<span class="syntax--variable syntax--other syntax--object syntax--property">y_vals</span>.<span class="syntax--entity syntax--name syntax--function">append</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--entity syntax--name syntax--variable syntax--self">self</span>.<span class="syntax--entity syntax--name syntax--function">calc_y</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>x<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="39"><span class=""><span class="syntax--source syntax--python"><span class="trailing-whitespace"> </span></span></span></div><div class="line" data-screen-row="40"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--storage syntax--type syntax--function">def</span> <span class="syntax--entity syntax--name syntax--function syntax--definition">get_share</span><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--variable syntax--parameter syntax--function">self</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span>:</span></span></div><div class="line" data-screen-row="41"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--keyword syntax--control">return</span> <span class="syntax--entity syntax--name syntax--variable syntax--self">self</span>.<span class="syntax--variable syntax--other syntax--object syntax--property">x_vals</span><span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span><span class="syntax--constant syntax--numeric">0</span><span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--entity syntax--name syntax--variable syntax--self">self</span>.<span class="syntax--variable syntax--other syntax--object syntax--property">y_vals</span><span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span><span class="syntax--constant syntax--numeric">0</span><span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span></span></span></div><div class="line" data-screen-row="42"><span class=""><span class="syntax--source syntax--python"><span class="trailing-whitespace"> </span></span></span></div><div class="line" data-screen-row="43"><span class=""><span class="syntax--source syntax--python"><span class="trailing-whitespace"> </span></span></span></div><div class="line" data-screen-row="44"><span class=""><span class="syntax--source syntax--python"><span class="syntax--storage syntax--type syntax--function">def</span> <span class="syntax--entity syntax--name syntax--function syntax--definition">main</span><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span>:</span></span></div><div class="line" data-screen-row="45"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span>sss <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--support syntax--type syntax--contructor">Shamir</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--constant syntax--numeric">92434467187580489687</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--constant syntax--numeric">10</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--constant syntax--numeric">18</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="46"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span>sss.<span class="syntax--entity syntax--name syntax--function">create_pol</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="47"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span>share <span class="syntax--keyword syntax--operator">=</span> sss.<span class="syntax--entity syntax--name syntax--function">get_share</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="48"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--entity syntax--name syntax--function syntax--call">seed</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>sss.<span class="syntax--variable syntax--other syntax--object syntax--property">secret</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="49"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span>key <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--entity syntax--name syntax--function syntax--call">randbytes</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--constant syntax--numeric">16</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="50"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span>cipher <span class="syntax--keyword syntax--operator">=</span> AES.<span class="syntax--entity syntax--name syntax--function">new</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>key<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> AES.<span class="syntax--variable syntax--other syntax--object syntax--property">MODE_ECB</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="51"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span>enc_FLAG <span class="syntax--keyword syntax--operator">=</span> cipher.<span class="syntax--entity syntax--name syntax--function">encrypt</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--entity syntax--name syntax--function syntax--call">pad</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>FLAG<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span><span class="syntax--constant syntax--numeric">16</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span>.<span class="syntax--entity syntax--name syntax--function">hex</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="52"><span class=""><span class="syntax--source syntax--python"><span class="trailing-whitespace"> </span></span></span></div><div class="line" data-screen-row="53"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span>f <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--support syntax--function syntax--call">open</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--string syntax--quoted">'msg.enc'</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--string syntax--quoted">'w'</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="57"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span>f.<span class="syntax--entity syntax--name syntax--function">close</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="58"><span class=""><span class="syntax--source syntax--python"><span class="trailing-whitespace"> </span></span></span></div><div class="line" data-screen-row="59"><span class=""><span class="syntax--source syntax--python"><span class="syntax--keyword syntax--control">if</span> __name__ <span class="syntax--keyword syntax--operator">==</span> <span class="syntax--string syntax--quoted">"__main__"</span>:</span></span></div><div class="line" data-screen-row="60"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--entity syntax--name syntax--function syntax--call">main</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div></pre>`;

const SpacePiratesEnc = `<pre class="syntax--editor syntax--editor-colors"><div class="syntax--line"><span class="syntax--source syntax--python">share:&nbsp;(<span class="syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python">21202245407317581090</span>,&nbsp;<span class="syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python">11086299714260406068</span>)</span></div><div class="syntax--line"><span class="syntax--source syntax--python">coefficient:&nbsp;<span class="syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python">93526756371754197321930622219489764824</span></span></div><div class="syntax--line"><span class="syntax--source syntax--python">secret&nbsp;message:&nbsp;<span class="syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python">1aaad05f3f187bcbb3fb5c9e233ea339082062fc10a59604d96bcc38d0af92cd842ad7301b5b72bd5378265dae0bc1c1e9f09a90c97b35cfadbcfe259021ce495e9b91d29f563ae7d49b66296f15e7999c9e547fac6f1a2ee682579143da511475ea791d24b5df6affb33147d57718eaa5b1b578230d97f395c458fc2c9c36525db1ba7b1097ad8f5df079994b383b32695ed9a372ea9a0eb1c6c18b3d3d43bd2db598667ef4f80845424d6c75abc88b59ef7c119d505cd696ed01c65f374a0df3f331d7347052faab63f76f587400b6a6f8b718df1db9cebe46a4ec6529bc226627d39baca7716a4c11be6f884c371b08d87c9e432af58c030382b737b9bb63045268a18455b9f1c4011a984a818a5427231320ee7eca39bdfe175333341b7c</span></span></div></pre>`;

const SpacePiratesEncoding = `<pre class="editor editor-colors"><div class="line" data-screen-row="0"><span><span class="syntax--source syntax--python"><span class="syntax--entity syntax--name syntax--function syntax--call">seed</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>sss.<span class="syntax--variable syntax--other syntax--object syntax--property">secret</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="1"><span class=""><span class="syntax--source syntax--python">key <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--entity syntax--name syntax--function syntax--call">randbytes</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--constant syntax--numeric">16</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="2"><span class=""><span class="syntax--source syntax--python">cipher <span class="syntax--keyword syntax--operator">=</span> AES.<span class="syntax--entity syntax--name syntax--function">new</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>key<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> AES.<span class="syntax--variable syntax--other syntax--object syntax--property">MODE_ECB</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="3"><span class=""><span class="syntax--source syntax--python">enc_FLAG <span class="syntax--keyword syntax--operator">=</span> cipher.<span class="syntax--entity syntax--name syntax--function">encrypt</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--entity syntax--name syntax--function syntax--call">pad</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>FLAG<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span><span class="syntax--constant syntax--numeric">16</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span>.<span class="syntax--entity syntax--name syntax--function">hex</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div></div></pre>`;

const SpacePiratesCoeffs = `<pre class="syntax--editor syntax--editor-colors"><div class="line" data-screen-row="0"><span class=""><span class="syntax--source syntax--python"><span class="syntax--comment syntax--line"># relevant code but slightly simplified<span class="trailing-whitespace"> </span></span></span></span></div><div class="line" data-screen-row="1"><span class=""><span class="syntax--source syntax--python"><span class="syntax--storage syntax--type syntax--function">def</span> <span class="syntax--entity syntax--name syntax--function syntax--definition">next_coeff</span><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--variable syntax--parameter syntax--function">val</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span>:</span></span></div><div class="line" data-screen-row="2"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">return</span> <span class="syntax--support syntax--function syntax--call">int</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--entity syntax--name syntax--function syntax--call">md5</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>val<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span>.<span class="syntax--entity syntax--name syntax--function">hexdigest</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span><span class="syntax--constant syntax--numeric">16</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="3"><span class=""><span class="syntax--source syntax--python"><span class="trailing-whitespace"> </span></span></span></div><div class="line" data-screen-row="4"><span class=""><span class="syntax--source syntax--python"><span class="syntax--storage syntax--type syntax--function">def</span> <span class="syntax--entity syntax--name syntax--function syntax--definition">calc_coeffs</span><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span>:</span></span></div><div class="line" data-screen-row="5"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">for</span> i <span class="syntax--keyword syntax--operator syntax--logical syntax--python">in</span> <span class="syntax--support syntax--function syntax--call">range</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--constant syntax--numeric">1</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span>n<span class="syntax--keyword syntax--operator">+</span><span class="syntax--constant syntax--numeric">1</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span>:</span></span></div><div class="line" data-screen-row="6"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span>coeffs.<span class="syntax--entity syntax--name syntax--function">append</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--entity syntax--name syntax--function syntax--call">next_coeff</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>coeffs<span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span>i<span class="syntax--keyword syntax--operator">-</span><span class="syntax--constant syntax--numeric">1</span><span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="7"><span class=""><span class="syntax--source syntax--python"><span class="trailing-whitespace"> </span></span></span></div><div class="line" data-screen-row="8"><span class=""><span class="syntax--source syntax--python"><span class="syntax--storage syntax--type syntax--function">def</span> <span class="syntax--entity syntax--name syntax--function syntax--definition">create_pol</span><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span>:</span></span></div><div class="line" data-screen-row="9"><span><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--entity syntax--name syntax--function syntax--call">calc_coeffs</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="10"><span><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span>coeffs <span class="syntax--keyword syntax--operator">=</span> coeffs<span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span>:k<span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span></span></span></div><div class="line" data-screen-row="11"><span><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--comment syntax--line"># other stuff after this<span class="trailing-whitespace"> </span></span></span></span></div><div class="line" data-screen-row="12"><span><span class="syntax--source syntax--python"><span class="trailing-whitespace"> </span></span></span></div><div class="line" data-screen-row="13"><span><span class="syntax--source syntax--python">sss <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--support syntax--type syntax--contructor">Shamir</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--constant syntax--numeric">92434467187580489687</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--constant syntax--numeric">10</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--constant syntax--numeric">18</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="14"><span><span class="syntax--source syntax--python"><span class="syntax--comment syntax--line"># sets p = 92434467187580489687, k = 10, n = 18<span class="trailing-whitespace"> </span></span></span></span></div><div class="line" data-screen-row="15"><span><span class="syntax--source syntax--python"><span class="syntax--comment syntax--line"># coeffs = [secret]<span class="trailing-whitespace"> </span></span></span></span></div><div class="line" data-screen-row="16"><span><span class="syntax--source syntax--python">sss.<span class="syntax--entity syntax--name syntax--function">create_pol</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div></pre>`;

const SpacePiratesVals = `<pre class="syntax--editor syntax--editor-colors"><div class="line" data-screen-row="0"><span><span class="syntax--source syntax--python"><span class="syntax--comment syntax--line"># relevant code but slightly simplified</span></span></span></div><div class="line" data-screen-row="1"><span class=""><span class="syntax--source syntax--python"><span class="syntax--storage syntax--type syntax--function">def</span> <span class="syntax--entity syntax--name syntax--function syntax--definition">calc_y</span><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--variable syntax--parameter syntax--function">x</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span>:</span></span></div><div class="line" data-screen-row="2"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span>y <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--constant syntax--numeric">0</span></span></span></div><div class="line" data-screen-row="3"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">for</span> i<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> coeff <span class="syntax--keyword syntax--operator syntax--logical syntax--python">in</span> <span class="syntax--support syntax--function syntax--call">enumerate</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>coeffs<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span>:</span></span></div><div class="line" data-screen-row="4"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span>y <span class="syntax--keyword syntax--operator">+=</span> coeff <span class="syntax--keyword syntax--operator">*</span> x<span class="syntax--keyword syntax--operator">**</span>i</span></span></div><div class="line" data-screen-row="5"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">return</span> y <span class="syntax--keyword syntax--operator">%</span> p</span></span></div><div class="line" data-screen-row="6"><span class=""><span class="syntax--source syntax--python"><span class="trailing-whitespace"> </span></span></span></div><div class="line" data-screen-row="7"><span class=""><span class="syntax--source syntax--python"><span class="syntax--storage syntax--type syntax--function">def</span> <span class="syntax--entity syntax--name syntax--function syntax--definition">create_pol</span><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span>:</span></span></div><div class="line" data-screen-row="8"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--entity syntax--name syntax--function syntax--call">calc_coeffs</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span> <span class="syntax--comment syntax--line"># coeffs are set up</span></span></span></div><div class="line" data-screen-row="9"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span>coeffs <span class="syntax--keyword syntax--operator">=</span> coeffs<span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span>:k<span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span></span></span></div><div class="line" data-screen-row="10"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">for</span> i <span class="syntax--keyword syntax--operator syntax--logical syntax--python">in</span> <span class="syntax--support syntax--function syntax--call">range</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>n<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span>:</span></span></div><div class="line" data-screen-row="11"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span>x <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--entity syntax--name syntax--function syntax--call">randint</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--constant syntax--numeric">1</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span>p<span class="syntax--keyword syntax--operator">-</span><span class="syntax--constant syntax--numeric">1</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="12"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span>x_vals.<span class="syntax--entity syntax--name syntax--function">append</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>x<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="13"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span>y_vals.<span class="syntax--entity syntax--name syntax--function">append</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--entity syntax--name syntax--function syntax--call">calc_y</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>x<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="14"><span class=""><span class="syntax--source syntax--python"><span class="trailing-whitespace"> </span></span></span></div><div class="line" data-screen-row="15"><span class=""><span class="syntax--source syntax--python">sss <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--support syntax--type syntax--contructor">Shamir</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--constant syntax--numeric">92434467187580489687</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--constant syntax--numeric">10</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--constant syntax--numeric">18</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="16"><span class=""><span class="syntax--source syntax--python"><span class="syntax--comment syntax--line"># sets p = 92434467187580489687, k = 10, n = 18</span></span></span></div><div class="line" data-screen-row="17"><span class=""><span class="syntax--source syntax--python"><span class="syntax--comment syntax--line"># coeffs = [secret]</span></span></span></div><div class="line" data-screen-row="18"><span class=""><span class="syntax--source syntax--python">sss.<span class="syntax--entity syntax--name syntax--function">create_pol</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div></pre>`;

const SpacePiratesSol = `<pre class="syntax--editor syntax--editor-colors"><div class="line" data-screen-row="0"><span><span class="syntax--source syntax--python">ty <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--constant syntax--numeric">0</span></span></span></div><div class="line" data-screen-row="1"><span class=""><span class="syntax--source syntax--python"><span class="syntax--keyword syntax--control">for</span> i <span class="syntax--keyword syntax--operator syntax--logical syntax--python">in</span> <span class="syntax--support syntax--function syntax--call">range</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--support syntax--function syntax--call">len</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>coeffs<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span>:</span></span></div><div class="line" data-screen-row="2"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span>ty <span class="syntax--keyword syntax--operator">+=</span> coeffs<span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span>i<span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span> <span class="syntax--keyword syntax--operator">*</span> x<span class="syntax--keyword syntax--operator">**</span><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>i<span class="syntax--keyword syntax--operator">+</span><span class="syntax--constant syntax--numeric">1</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></div><div class="line" data-screen-row="3"><span class=""><span class="syntax--source syntax--python"><span class="syntax--comment syntax--line"># y = ty % p</span></span></span></div><div class="line" data-screen-row="4"><span class=""><span class="syntax--source syntax--python"><span class="syntax--comment syntax--line"># ty should be equal to the value of y but is missing secret * x ^ 0 = secret</span></span></span></div><div class="line" data-screen-row="5"><span class=""><span class="syntax--source syntax--python"><span class="syntax--comment syntax--line"># therefore (secret + ty) % p = y</span></span></span></div><div class="line" data-screen-row="6"><span class=""><span class="syntax--source syntax--python">s <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>y <span class="syntax--keyword syntax--operator">-</span> <span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>ty <span class="syntax--keyword syntax--operator">%</span> p<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span> <span class="syntax--keyword syntax--operator">+</span> p<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span> <span class="syntax--keyword syntax--operator">%</span> p</span></span></div><div class="line" data-screen-row="7"><span class=""><span class="syntax--source syntax--python"><span class="syntax--support syntax--function syntax--call">print</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>s<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span> <span class="syntax--comment syntax--line"># 39612257993477957104</span></span></span></div><div class="line" data-screen-row="8"><span class=""></span> </div><div class="line" data-screen-row="9"><span class=""><span class="syntax--source syntax--python"><span class="syntax--entity syntax--name syntax--function syntax--call">seed</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>s<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="10"><span class=""><span class="syntax--source syntax--python">key <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--entity syntax--name syntax--function syntax--call">randbytes</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--constant syntax--numeric">16</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="11"><span class=""><span class="syntax--source syntax--python">cipher <span class="syntax--keyword syntax--operator">=</span> AES.<span class="syntax--entity syntax--name syntax--function">new</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>key<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> AES.<span class="syntax--variable syntax--other syntax--object syntax--property">MODE_ECB</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="12"><span class=""><span class="syntax--source syntax--python"><span class="syntax--support syntax--function syntax--call">print</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>cipher.<span class="syntax--entity syntax--name syntax--function">decrypt</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--entity syntax--name syntax--function syntax--call">unhexlify</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>secret_message<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span>.<span class="syntax--entity syntax--name syntax--function">decode</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="13"><span class=""><span class="syntax--source syntax--python"><span class="syntax--string syntax--quoted">'''</span></span></span></div><div class="line" data-screen-row="14"><span class=""><span class="syntax--source syntax--python"><span class="syntax--string syntax--quoted">The treasure is located at galaxy VS-708.</span></span></span></div><div class="line" data-screen-row="15"><span class=""><span class="syntax--source syntax--python"><span class="syntax--string syntax--quoted">Our team needs 3 light years to reach it.</span></span></span></div><div class="line" data-screen-row="16"><span class=""><span class="syntax--source syntax--python"><span class="syntax--string syntax--quoted">Our solar cruise has its steam canons ready to fire in case we encounter enemies.</span></span></span></div><div class="line" data-screen-row="17"><span class=""><span class="syntax--source syntax--python"><span class="syntax--string syntax--quoted">Next time you will hear from us brother, everyone is going to be rich!</span></span></span></div><div class="line" data-screen-row="18"><span class=""><span class="syntax--source syntax--python"><span class="syntax--string syntax--quoted">HTB{1_d1dnt_kn0w_0n3_sh4r3_w45_3n0u9h!1337}</span></span></span></div><div class="line" data-screen-row="19"><span class=""><span class="syntax--source syntax--python"><span class="syntax--string syntax--quoted">'''</span></span></span></div></pre>`;

const InsaneBoltSolCode = `<pre class="syntax--editor syntax--editor-colors"><div class="line" data-screen-row="0"><span class=""><span class="syntax--source syntax--python"><span class="syntax--keyword syntax--control">import</span> socket</span></span></div><div class="line" data-screen-row="1"><span class=""><span class="syntax--source syntax--python"><span class="syntax--keyword syntax--control">import</span> sys</span></span></div><div class="line" data-screen-row="2"><span class=""><span class="syntax--source syntax--python"><span class="trailing-whitespace"> </span></span></span></div><div class="line" data-screen-row="3"><span class=""><span class="syntax--source syntax--python">HOST <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--string syntax--quoted">'HOST'</span></span></span></div><div class="line" data-screen-row="4"><span class=""><span class="syntax--source syntax--python">PORT <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--support syntax--function syntax--call">int</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--string syntax--quoted">'PORT'</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="5"><span class=""><span class="syntax--source syntax--python"><span class="trailing-whitespace"> </span></span></span></div><div class="line" data-screen-row="6"><span class=""><span class="syntax--source syntax--python">border <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--string syntax--quoted">'🔥'</span></span></span></div><div class="line" data-screen-row="7"><span class=""><span class="syntax--source syntax--python">wall <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--string syntax--quoted">'☠️'</span></span></span></div><div class="line" data-screen-row="8"><span class=""><span class="syntax--source syntax--python">player <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--string syntax--quoted">'🤖'</span></span></span></div><div class="line" data-screen-row="9"><span class=""><span class="syntax--source syntax--python">path <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--string syntax--quoted">'🔩'</span></span></span></div><div class="line" data-screen-row="10"><span class=""><span class="syntax--source syntax--python">end <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--string syntax--quoted">'💎'</span></span></span></div><div class="line" data-screen-row="12"><span class=""><span class="syntax--source syntax--python"><span class="syntax--storage syntax--type syntax--function">def</span> <span class="syntax--entity syntax--name syntax--function syntax--definition">findStart</span><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--variable syntax--parameter syntax--function">grid</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span>:</span></span></div><div class="line" data-screen-row="13"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">for</span> x <span class="syntax--keyword syntax--operator syntax--logical syntax--python">in</span> <span class="syntax--support syntax--function syntax--call">range</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--support syntax--function syntax--call">len</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>grid<span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span><span class="syntax--constant syntax--numeric">1</span><span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span>: <span class="syntax--comment syntax--line"># start is always in row 1 of the grid</span></span></span></div><div class="line" data-screen-row="14"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--keyword syntax--control">if</span> grid<span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span><span class="syntax--constant syntax--numeric">1</span><span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span><span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span>x<span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span> <span class="syntax--keyword syntax--operator">==</span> player:</span></span></div><div class="line" data-screen-row="15"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span><span class="syntax--keyword syntax--control">return</span> <span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>x<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span><span class="syntax--constant syntax--numeric">1</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></div><div class="line" data-screen-row="16"><span class=""><span class="syntax--source syntax--python"><span class="trailing-whitespace"> </span></span></span></div><div class="line" data-screen-row="17"><span class=""><span class="syntax--source syntax--python"><span class="syntax--storage syntax--type syntax--function">def</span> <span class="syntax--entity syntax--name syntax--function syntax--definition">checkNeighbor</span><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--variable syntax--parameter syntax--function">x</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--variable syntax--parameter syntax--function">y</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--variable syntax--parameter syntax--function">parent</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--variable syntax--parameter syntax--function">visited</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--variable syntax--parameter syntax--function">toVisit</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--variable syntax--parameter syntax--function">trace</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--variable syntax--parameter syntax--function">finished</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span>:</span></span></div><div class="line" data-screen-row="18"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span>neighbour <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>x<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> y<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></div><div class="line" data-screen-row="19"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">if</span> <span class="syntax--keyword syntax--operator syntax--logical syntax--python">not</span> neighbour <span class="syntax--keyword syntax--operator syntax--logical syntax--python">in</span> visited:</span></span></div><div class="line" data-screen-row="20"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span>n <span class="syntax--keyword syntax--operator">=</span> grid<span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span>y<span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span><span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span>x<span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span></span></span></div><div class="line" data-screen-row="21"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--keyword syntax--control">if</span> n <span class="syntax--keyword syntax--operator">==</span> path:</span></span></div><div class="line" data-screen-row="22"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span>toVisit.<span class="syntax--entity syntax--name syntax--function">append</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>neighbour<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="23"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span>visited.<span class="syntax--entity syntax--name syntax--function">append</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>neighbour<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="24"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span>trace<span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span>neighbour<span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span> <span class="syntax--keyword syntax--operator">=</span> parent</span></span></div><div class="line" data-screen-row="25"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--keyword syntax--control">if</span> n <span class="syntax--keyword syntax--operator">==</span> end:</span></span></div><div class="line" data-screen-row="26"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span>toVisit <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span><span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span> <span class="syntax--comment syntax--line"># quits loop</span></span></span></div><div class="line" data-screen-row="27"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span>trace<span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span>neighbour<span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span> <span class="syntax--keyword syntax--operator">=</span> parent</span></span></div><div class="line" data-screen-row="28"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span>finished.<span class="syntax--entity syntax--name syntax--function">append</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>neighbour<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="29"><span class=""><span class="syntax--source syntax--python"><span class="trailing-whitespace"> </span></span></span></div><div class="line" data-screen-row="30"><span class=""><span class="syntax--source syntax--python"><span class="syntax--storage syntax--type syntax--function">def</span> <span class="syntax--entity syntax--name syntax--function syntax--definition">bfs</span><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--variable syntax--parameter syntax--function">grid</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--variable syntax--parameter syntax--function">start</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span>:</span></span></div><div class="line" data-screen-row="32"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span>toVisit <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span>start<span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span></span></span></div><div class="line" data-screen-row="33"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span>trace <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--punctuation syntax--section syntax--block syntax--begin syntax--bracket syntax--curly">{</span><span class="syntax--punctuation syntax--section syntax--block syntax--end syntax--bracket syntax--curly">}</span></span></span></div><div class="line" data-screen-row="34"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span>finished <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span><span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span></span></span></div><div class="line" data-screen-row="35"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">while</span> <span class="syntax--support syntax--function syntax--call">len</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>toVisit<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span> <span class="syntax--keyword syntax--operator">&gt;</span> <span class="syntax--constant syntax--numeric">0</span>:</span></span></div><div class="line" data-screen-row="37"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--keyword syntax--control">for</span> dx <span class="syntax--keyword syntax--operator syntax--logical syntax--python">in</span> <span class="syntax--support syntax--function syntax--call">range</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--keyword syntax--operator">-</span><span class="syntax--constant syntax--numeric">1</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span><span class="syntax--constant syntax--numeric">2</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span>:</span></span></div><div class="line" data-screen-row="38"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span><span class="syntax--entity syntax--name syntax--function syntax--call">checkNeighbor</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>x <span class="syntax--keyword syntax--operator">+</span> dx<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> y<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>x<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> y<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> visited<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> toVisit<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> trace<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> finished<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="39"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--entity syntax--name syntax--function syntax--call">checkNeighbor</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>x<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> y <span class="syntax--keyword syntax--operator">+</span> <span class="syntax--constant syntax--numeric">1</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>x<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> y<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> visited<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> toVisit<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> trace<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> finished<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="40"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">return</span> <span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>trace<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> finished<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></div><div class="line" data-screen-row="41"><span class=""><span class="syntax--source syntax--python"><span class="trailing-whitespace"> </span></span></span></div><div class="line" data-screen-row="42"><span class=""><span class="syntax--source syntax--python"><span class="syntax--comment syntax--line"># removes padding and charater formatting</span></span></span></div><div class="line" data-screen-row="43"><span class=""><span class="syntax--source syntax--python"><span class="syntax--storage syntax--type syntax--function">def</span> <span class="syntax--entity syntax--name syntax--function syntax--definition">removeSpaces</span><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--variable syntax--parameter syntax--function">s</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span>:</span></span></div><div class="line" data-screen-row="44"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">return</span> s.<span class="syntax--entity syntax--name syntax--function">replace</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--string syntax--quoted">" "</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--string syntax--quoted">""</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span>.<span class="syntax--entity syntax--name syntax--function">replace</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--string syntax--quoted">u"<span class="syntax--constant syntax--character syntax--escape">️</span>"</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--string syntax--quoted">""</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="45"><span class=""><span class="syntax--source syntax--python"><span class="trailing-whitespace"> </span></span></span></div><div class="line" data-screen-row="46"><span class=""><span class="syntax--source syntax--python"><span class="syntax--keyword syntax--control">with</span> socket.<span class="syntax--entity syntax--name syntax--function">socket</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>socket.<span class="syntax--variable syntax--other syntax--object syntax--property">AF_INET</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> socket.<span class="syntax--variable syntax--other syntax--object syntax--property">SOCK_STREAM</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span> <span class="syntax--keyword syntax--control">as</span> s:</span></span></div><div class="line" data-screen-row="47"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span>s.<span class="syntax--entity syntax--name syntax--function">connect</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>HOST<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> PORT<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="48"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--comment syntax--line"># get instructions. these are the same each time but are included for clarity</span></span></span></div><div class="line" data-screen-row="49"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span>data <span class="syntax--keyword syntax--operator">=</span> s.<span class="syntax--entity syntax--name syntax--function">recv</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--constant syntax--numeric">1024</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="50"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--support syntax--function syntax--call">print</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>data.<span class="syntax--entity syntax--name syntax--function">decode</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--variable syntax--parameter syntax--function">end</span><span class="syntax--keyword syntax--operator">=</span><span class="syntax--string syntax--quoted">""</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="52"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span>data <span class="syntax--keyword syntax--operator">=</span> s.<span class="syntax--entity syntax--name syntax--function">recv</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--constant syntax--numeric">1024</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="53"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--comment syntax--line"># gets first grid from server</span></span></span></div><div class="line" data-screen-row="54"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--support syntax--function syntax--call">print</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>data.<span class="syntax--entity syntax--name syntax--function">decode</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--variable syntax--parameter syntax--function">end</span><span class="syntax--keyword syntax--operator">=</span><span class="syntax--string syntax--quoted">""</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="56"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span>data <span class="syntax--keyword syntax--operator">=</span> s.<span class="syntax--entity syntax--name syntax--function">recv</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--constant syntax--numeric">4096</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="57"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--support syntax--function syntax--call">print</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>data.<span class="syntax--entity syntax--name syntax--function">decode</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--variable syntax--parameter syntax--function">end</span><span class="syntax--keyword syntax--operator">=</span><span class="syntax--string syntax--quoted">""</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="59"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span>grid <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--support syntax--function syntax--call">list</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--support syntax--function syntax--call">map</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>removeSpaces<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> grid<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="60"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">while</span> <span class="syntax--constant syntax--language">True</span>: <span class="syntax--comment syntax--line"># continue looping till an error is thrown</span></span></span></div><div class="line" data-screen-row="61"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span>start <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--entity syntax--name syntax--function syntax--call">findStart</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>grid<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="62"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span>trace<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> finished <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--entity syntax--name syntax--function syntax--call">bfs</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>grid<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> start<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="63"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--keyword syntax--control">if</span> <span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--support syntax--function syntax--call">len</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>finished<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span> <span class="syntax--keyword syntax--operator">!=</span> <span class="syntax--constant syntax--numeric">1</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span>:</span></span></div><div class="line" data-screen-row="64"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span><span class="syntax--support syntax--function syntax--call">print</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--string syntax--quoted">"Shouldn't ever happen"</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="65"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span>sys.<span class="syntax--entity syntax--name syntax--function">exit</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="66"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span>route <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--string syntax--quoted">""</span></span></span></div><div class="line" data-screen-row="67"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span>currentNode <span class="syntax--keyword syntax--operator">=</span> finished<span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span><span class="syntax--constant syntax--numeric">0</span><span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span></span></span></div><div class="line" data-screen-row="68"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--keyword syntax--control">while</span> currentNode <span class="syntax--keyword syntax--operator">!=</span> start: <span class="syntax--comment syntax--line"># traces from end to start</span></span></span></div><div class="line" data-screen-row="69"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span>cx<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> cy <span class="syntax--keyword syntax--operator">=</span> currentNode</span></span></div><div class="line" data-screen-row="70"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span>px<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> py <span class="syntax--keyword syntax--operator">=</span> trace<span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span>currentNode<span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span> <span class="syntax--comment syntax--line"># parent node</span></span></span></div><div class="line" data-screen-row="71"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span>direction <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--string syntax--quoted">""</span></span></span></div><div class="line" data-screen-row="72"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span><span class="syntax--keyword syntax--control">if</span> px <span class="syntax--keyword syntax--operator">-</span> <span class="syntax--constant syntax--numeric">1</span> <span class="syntax--keyword syntax--operator">==</span> cx:</span></span></div><div class="line" data-screen-row="73"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">                </span>direction <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--string syntax--quoted">"L"</span></span></span></div><div class="line" data-screen-row="74"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span><span class="syntax--keyword syntax--control">if</span> px <span class="syntax--keyword syntax--operator">+</span> <span class="syntax--constant syntax--numeric">1</span> <span class="syntax--keyword syntax--operator">==</span> cx:</span></span></div><div class="line" data-screen-row="75"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">                </span>direction <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--string syntax--quoted">"R"</span></span></span></div><div class="line" data-screen-row="76"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span><span class="syntax--keyword syntax--control">if</span> py <span class="syntax--keyword syntax--operator">+</span> <span class="syntax--constant syntax--numeric">1</span> <span class="syntax--keyword syntax--operator">==</span> cy:</span></span></div><div class="line" data-screen-row="77"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">                </span>direction <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--string syntax--quoted">"D"</span></span></span></div><div class="line" data-screen-row="78"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span>route <span class="syntax--keyword syntax--operator">=</span> direction <span class="syntax--keyword syntax--operator">+</span> route</span></span></div><div class="line" data-screen-row="79"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span>currentNode <span class="syntax--keyword syntax--operator">=</span> trace<span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span>currentNode<span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span></span></span></div><div class="line" data-screen-row="81"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--support syntax--function syntax--call">print</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>route<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="82"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span>data <span class="syntax--keyword syntax--operator">=</span> s.<span class="syntax--entity syntax--name syntax--function">recv</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--constant syntax--numeric">100000</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="83"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--support syntax--function syntax--call">print</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>data.<span class="syntax--entity syntax--name syntax--function">decode</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--variable syntax--parameter syntax--function">end</span><span class="syntax--keyword syntax--operator">=</span><span class="syntax--string syntax--quoted">""</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div><div class="line" data-screen-row="85"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span>grid <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--support syntax--function syntax--call">list</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--support syntax--function syntax--call">map</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>removeSpaces<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> grid<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div></pre>`;

export {SpacePiratesChallenge, SpacePiratesEnc, SpacePiratesEncoding, SpacePiratesCoeffs, SpacePiratesVals, SpacePiratesSol, InsaneBoltSolCode};