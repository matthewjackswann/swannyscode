const PuzzleramaSol1Code = `<pre class="syntax--editor syntax--editor-colors"><div class="line" data-screen-row="0"><span class=""><span class="syntax--source syntax--java"><span class="syntax--storage syntax--modifier">private</span> <span class="syntax--storage syntax--type">boolean</span> solve<span class="syntax--punctuation syntax--bracket syntax--round">(</span><span class="syntax--storage syntax--type">List</span><span class="syntax--punctuation syntax--bracket syntax--angle">&lt;</span><span class="syntax--storage syntax--type">Point2D</span><span class="syntax--punctuation syntax--bracket syntax--angle">&gt;</span> unFixed<span class="syntax--punctuation syntax--bracket syntax--round">)</span> <span class="syntax--punctuation syntax--bracket syntax--curly">{</span></span></span></div><div class="line" data-screen-row="1"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">    </span><span class="syntax--comment syntax--block">// used for recursive call, if everything is fixed return if it is solved</span></span></span></div><div class="line" data-screen-row="2"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">if</span> <span class="syntax--punctuation syntax--bracket syntax--round">(</span>unFixed<span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">isEmpty</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span> <span class="syntax--keyword syntax--control">return</span> <span class="syntax--entity syntax--name syntax--function">solved</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span></span></span></div><div class="line" data-screen-row="3"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">    </span><span class="syntax--storage syntax--type">boolean</span> partFixed <span class="syntax--keyword syntax--operator syntax--assignment">=</span> <span class="syntax--constant syntax--boolean">true</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span></span></span></div><div class="line" data-screen-row="4"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">while</span> <span class="syntax--punctuation syntax--bracket syntax--round">(</span>partFixed<span class="syntax--punctuation syntax--bracket syntax--round">)</span> <span class="syntax--punctuation syntax--bracket syntax--curly">{</span> <span class="syntax--comment syntax--block">// while at least one pipe was fixed the previous iteration</span></span></span></div><div class="line" data-screen-row="5"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">        </span>partFixed <span class="syntax--keyword syntax--operator syntax--assignment">=</span> <span class="syntax--constant syntax--boolean">false</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span></span></span></div><div class="line" data-screen-row="6"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">        </span><span class="syntax--storage syntax--type">List</span><span class="syntax--punctuation syntax--bracket syntax--angle">&lt;</span><span class="syntax--storage syntax--type">Pipe</span><span class="syntax--punctuation syntax--bracket syntax--angle">&gt;</span> toFix <span class="syntax--keyword syntax--operator syntax--assignment">=</span> <span class="syntax--keyword syntax--control">new</span> <span class="syntax--storage syntax--type">ArrayList</span><span class="syntax--punctuation syntax--bracket syntax--angle">&lt;</span><span class="syntax--punctuation syntax--bracket syntax--angle">&gt;</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span></span></span></div><div class="line" data-screen-row="7"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">        </span><span class="syntax--keyword syntax--control">for</span> <span class="syntax--punctuation syntax--bracket syntax--round">(</span><span class="syntax--storage syntax--type">Pipe</span> pipe : unFixed<span class="syntax--punctuation syntax--bracket syntax--round">)</span> <span class="syntax--punctuation syntax--bracket syntax--curly">{</span></span></span></div><div class="line" data-screen-row="8"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">            </span><span class="syntax--storage syntax--type">List</span><span class="syntax--punctuation syntax--bracket syntax--angle">&lt;</span><span class="syntax--storage syntax--type">Integer</span><span class="syntax--punctuation syntax--bracket syntax--angle">&gt;</span> validRotations <span class="syntax--keyword syntax--operator syntax--assignment">=</span> pipe<span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">getValidRotations</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span>unFixed<span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span></span></span></div><div class="line" data-screen-row="9"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">            </span><span class="syntax--keyword syntax--control">if</span> <span class="syntax--punctuation syntax--bracket syntax--round">(</span>validRotations<span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">size</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span> <span class="syntax--keyword syntax--operator syntax--comparison">==</span> <span class="syntax--constant syntax--numeric">1</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span> <span class="syntax--punctuation syntax--bracket syntax--curly">{</span> <span class="syntax--comment syntax--block">// if there is only one valid rotation</span></span></span></div><div class="line" data-screen-row="10"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">                </span>pipe<span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">setRotation</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span>validRotations<span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">get</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span><span class="syntax--constant syntax--numeric">0</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span> <span class="syntax--comment syntax--block">// set it's rotation to that</span></span></span></div><div class="line" data-screen-row="11"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">                </span>partFixed <span class="syntax--keyword syntax--operator syntax--assignment">=</span> <span class="syntax--constant syntax--boolean">true</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span></span></span></div><div class="line" data-screen-row="12"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">                </span>toFix<span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">add</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span>pipe<span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span> <span class="syntax--comment syntax--block">// fix the pipe</span></span></span></div><div class="line" data-screen-row="13"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">            </span><span class="syntax--punctuation syntax--bracket syntax--curly">}</span></span></span></div><div class="line" data-screen-row="14"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">        </span><span class="syntax--punctuation syntax--bracket syntax--curly">}</span></span></span></div><div class="line" data-screen-row="15"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">        </span><span class="syntax--comment syntax--block">// remove the fixed pipes from the unfixed list</span></span></span></div><div class="line" data-screen-row="16"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">        </span>unFixed<span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">removeIf</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span>toFix<span class="syntax--keyword syntax--control syntax--method">::</span><span class="syntax--entity syntax--name syntax--function">contains</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span></span></span></div><div class="line" data-screen-row="17"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">    </span><span class="syntax--punctuation syntax--bracket syntax--curly">}</span></span></span></div><div class="line" data-screen-row="18"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">if</span> <span class="syntax--punctuation syntax--bracket syntax--round">(</span>unFixed<span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">isEmpty</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span> <span class="syntax--keyword syntax--control">return</span> <span class="syntax--entity syntax--name syntax--function">solved</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span></span></span></div><div class="line" data-screen-row="19"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">    </span><span class="syntax--comment syntax--block">// continues to part two of the algorithm</span></span></span></div></pre>`;

const PuzzleramaSol2Code = `<pre class="syntax--editor syntax--editor-colors"><div class="line" data-screen-row="0"><span class=""><span class="leading-whitespace">    </span><span class="syntax--source syntax--java"><span class="syntax--comment syntax--block">// otherwise makes assumption</span></span></span></div><div class="line" data-screen-row="1"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">    </span><span class="syntax--storage syntax--type">Pipe</span> newFixedPipe <span class="syntax--keyword syntax--operator syntax--assignment">=</span> unFixed<span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">get</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span><span class="syntax--constant syntax--numeric">0</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span> <span class="syntax--comment syntax--block">// selects the first unfixed pipe</span></span></span></div><div class="line" data-screen-row="2"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">    </span>unFixed<span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">remove</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span>newFixedPipe<span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span> <span class="syntax--comment syntax--block">// removes it from the unfixed list</span></span></span></div><div class="line" data-screen-row="3"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">    </span><span class="syntax--storage syntax--type">List</span><span class="syntax--punctuation syntax--bracket syntax--angle">&lt;</span><span class="syntax--storage syntax--type">Integer</span><span class="syntax--punctuation syntax--bracket syntax--angle">&gt;</span> validRotations <span class="syntax--keyword syntax--operator syntax--assignment">=</span> newFixedPipe<span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">getValidRotations</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span>unFixed<span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span></span></span></div><div class="line" data-screen-row="4"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">for</span> <span class="syntax--punctuation syntax--bracket syntax--round">(</span><span class="syntax--storage syntax--type">int</span> rotation: validRotations<span class="syntax--punctuation syntax--bracket syntax--round">)</span> <span class="syntax--punctuation syntax--bracket syntax--curly">{</span></span></span></div><div class="line" data-screen-row="5"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">        </span><span class="syntax--comment syntax--block">// presumes that this rotation is the correct one</span></span></span></div><div class="line" data-screen-row="6"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">        </span>newFixedPipe<span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">setRotation</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span>rotation<span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span></span></span></div><div class="line" data-screen-row="7"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">        </span><span class="syntax--comment syntax--block">// if the grid can be solved then the presumption is correct</span></span></span></div><div class="line" data-screen-row="8"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">        </span><span class="syntax--keyword syntax--control">if</span> <span class="syntax--punctuation syntax--bracket syntax--round">(</span><span class="syntax--entity syntax--name syntax--function">solve</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span><span class="syntax--keyword syntax--control">new</span> <span class="syntax--storage syntax--type">ArrayList</span><span class="syntax--punctuation syntax--bracket syntax--angle">&lt;</span><span class="syntax--punctuation syntax--bracket syntax--angle">&gt;</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span>unFixed<span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span> <span class="syntax--punctuation syntax--bracket syntax--curly">{</span></span></span></div><div class="line" data-screen-row="9"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">            </span><span class="syntax--keyword syntax--control">return</span> <span class="syntax--constant syntax--boolean">true</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span></span></span></div><div class="line" data-screen-row="10"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">        </span><span class="syntax--punctuation syntax--bracket syntax--curly">}</span><span class="trailing-whitespace"> </span></span></span></div><div class="line" data-screen-row="11"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">        </span><span class="syntax--comment syntax--block">// if the grid can't be solved the grid is</span></span></span></div><div class="line" data-screen-row="12"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">        </span><span class="syntax--comment syntax--block">//incorrect and moves onto the next valid rotation</span></span></span></div><div class="line" data-screen-row="13"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">    </span><span class="syntax--punctuation syntax--bracket syntax--curly">}</span></span></span></div><div class="line" data-screen-row="14"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">    </span><span class="syntax--comment syntax--block">// if all valid rotations are invalid then a previous assumption must<span class="trailing-whitespace"> </span></span></span></span></div><div class="line" data-screen-row="15"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">    </span><span class="syntax--comment syntax--block">// be wrong so false is returned. This will move the assumption on to another one.</span></span></span></div><div class="line" data-screen-row="16"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">return</span> <span class="syntax--constant syntax--boolean">false</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span></span></span></div><div class="line" data-screen-row="17"><span class=""><span class="syntax--source syntax--java"><span class="syntax--punctuation syntax--bracket syntax--curly">}</span></span></span></div></pre>`;

const PuzzleramaSubmitCode = `<pre class="syntax--editor syntax--editor-colors"><div class="line" data-screen-row="0"><span class=""><span class="syntax--source syntax--java"><span class="syntax--storage syntax--modifier">public</span> <span class="syntax--storage syntax--type">void</span> run<span class="syntax--punctuation syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span> <span class="syntax--punctuation syntax--bracket syntax--curly">{</span></span></span></div><div class="line" data-screen-row="1"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">    </span><span class="syntax--storage syntax--type">boolean</span> running <span class="syntax--keyword syntax--operator syntax--assignment">=</span> <span class="syntax--constant syntax--boolean">true</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span></span></span></div><div class="line" data-screen-row="2"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">while</span> <span class="syntax--punctuation syntax--bracket syntax--round">(</span>running<span class="syntax--punctuation syntax--bracket syntax--round">)</span> <span class="syntax--punctuation syntax--bracket syntax--curly">{</span></span></span></div><div class="line" data-screen-row="3"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">        </span><span class="syntax--storage syntax--type">Tuple3</span><span class="syntax--punctuation syntax--bracket syntax--angle">&lt;</span><span class="syntax--storage syntax--type">AtomicBoolean</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--storage syntax--type">Pipe</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--storage syntax--type">Integer</span><span class="syntax--punctuation syntax--bracket syntax--angle">&gt;</span> instruction <span class="syntax--keyword syntax--operator syntax--assignment">=</span> instructions<span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">take</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span></span></span></div><div class="line" data-screen-row="4"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">        </span><span class="syntax--comment syntax--block">// if terminating instruction stop</span></span></span></div><div class="line" data-screen-row="5"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">        </span><span class="syntax--keyword syntax--control">if</span> <span class="syntax--punctuation syntax--bracket syntax--round">(</span><span class="syntax--storage syntax--type">Pipe</span><span class="syntax--punctuation syntax--separator syntax--period">.</span>nullPipe<span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">equals</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span>instruction<span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">getSecond</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span> running <span class="syntax--keyword syntax--operator syntax--assignment">=</span> <span class="syntax--constant syntax--boolean">false</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span></span></span></div><div class="line" data-screen-row="6"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">        </span><span class="syntax--keyword syntax--control">else</span> <span class="syntax--keyword syntax--control">if</span> <span class="syntax--punctuation syntax--bracket syntax--round">(</span>instruction<span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">getFirst</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">get</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span> <span class="syntax--punctuation syntax--bracket syntax--curly">{</span> <span class="syntax--comment syntax--block">// process instruction as it's valid</span></span></span></div><div class="line" data-screen-row="7"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">            </span><span class="syntax--storage syntax--type">Pipe</span> pipe <span class="syntax--keyword syntax--operator syntax--assignment">=</span> instruction<span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">getSecond</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span></span></span></div><div class="line" data-screen-row="8"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">            </span><span class="syntax--storage syntax--type">int</span> targetRotation <span class="syntax--keyword syntax--operator syntax--assignment">=</span> instruction<span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">getThird</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span></span></span></div><div class="line" data-screen-row="9"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">            </span><span class="syntax--keyword syntax--control">if</span> <span class="syntax--punctuation syntax--bracket syntax--round">(</span>targetRotation <span class="syntax--keyword syntax--operator syntax--comparison">&gt;=</span> pipe<span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">getMaxRotation</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span></span></span></div><div class="line" data-screen-row="10"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">                </span><span class="syntax--keyword syntax--control">throw</span> <span class="syntax--keyword syntax--control">new</span> <span class="syntax--storage syntax--type">RuntimeException</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span><span class="syntax--string syntax--quoted syntax--double">"Can't rotate that much"</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span></span></span></div><div class="line" data-screen-row="11"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">            </span><span class="syntax--storage syntax--type">int</span> currentRotation <span class="syntax--keyword syntax--operator syntax--assignment">=</span> currentRotations<span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">getOrDefault</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span>pipe<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--constant syntax--numeric">0</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span></span></span></div><div class="line" data-screen-row="12"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">            </span><span class="syntax--keyword syntax--control">if</span> <span class="syntax--punctuation syntax--bracket syntax--round">(</span>currentRotation <span class="syntax--keyword syntax--operator syntax--comparison">!=</span> targetRotation<span class="syntax--punctuation syntax--bracket syntax--round">)</span> <span class="syntax--punctuation syntax--bracket syntax--curly">{</span></span></span></div><div class="line" data-screen-row="13"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">                </span><span class="syntax--comment syntax--block">// while target != current, rotates the pipe</span></span></span></div><div class="line" data-screen-row="14"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">                </span><span class="syntax--keyword syntax--control">while</span> <span class="syntax--punctuation syntax--bracket syntax--round">(</span>currentRotation <span class="syntax--keyword syntax--operator syntax--comparison">!=</span> targetRotation<span class="syntax--punctuation syntax--bracket syntax--round">)</span> <span class="syntax--punctuation syntax--bracket syntax--curly">{</span></span></span></div><div class="line" data-screen-row="15"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">                    </span><span class="syntax--entity syntax--name syntax--function">click</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span>pipe<span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">getCenter</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span></span></span></div><div class="line" data-screen-row="16"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">                    </span>currentRotation <span class="syntax--keyword syntax--operator syntax--assignment">=</span> <span class="syntax--punctuation syntax--bracket syntax--round">(</span>currentRotation <span class="syntax--keyword syntax--operator syntax--arithmetic">+</span> <span class="syntax--constant syntax--numeric">1</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span> <span class="syntax--keyword syntax--operator syntax--arithmetic">%</span> pipe<span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">getMaxRotation</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span><span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span></span></span></div><div class="line" data-screen-row="17"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">                    </span><span class="syntax--comment syntax--block">// waits for animation to finish</span></span></span></div><div class="line" data-screen-row="18"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">                    </span><span class="syntax--storage syntax--type">TimeUnit</span><span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--constant syntax--other">MILLISECONDS</span><span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">sleep</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span>delay<span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span></span></span></div><div class="line" data-screen-row="19"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">                </span><span class="syntax--punctuation syntax--bracket syntax--curly">}</span></span></span></div><div class="line" data-screen-row="20"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">                </span>currentRotations<span class="syntax--punctuation syntax--separator syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">put</span><span class="syntax--punctuation syntax--bracket syntax--round">(</span>pipe<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> currentRotation<span class="syntax--punctuation syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--terminator syntax--statement">;</span></span></span></div><div class="line" data-screen-row="21"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">            </span><span class="syntax--punctuation syntax--bracket syntax--curly">}</span></span></span></div><div class="line" data-screen-row="22"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">        </span><span class="syntax--punctuation syntax--bracket syntax--curly">}</span></span></span></div><div class="line" data-screen-row="23"><span class=""><span class="syntax--source syntax--java"><span class="leading-whitespace">    </span><span class="syntax--punctuation syntax--bracket syntax--curly">}</span></span></span></div><div class="line" data-screen-row="24"><span class=""><span class="syntax--source syntax--java"><span class="syntax--punctuation syntax--bracket syntax--curly">}</span></span></span></div></pre>`;

export {PuzzleramaSol1Code, PuzzleramaSol2Code, PuzzleramaSubmitCode};