const DiscoZooGridCode = `<pre class="syntax--editor syntax--editor-colors"><div class="line" data-screen-row="0"><span class=""><span class="syntax--source syntax--js"><span class="syntax--storage syntax--type syntax--function">function</span> <span class="syntax--entity syntax--name syntax--function">getPossibleGrids</span><span class="syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--variable syntax--parameter syntax--function">animals</span><span class="syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round">)</span> <span class="syntax--storage syntax--type syntax--function syntax--arrow">=&gt;</span> <span class="syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly">{</span></span></span></div><div class="line" data-screen-row="1"><span class=""><span class="syntax--source syntax--js"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">if</span> <span class="syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round">(</span>animals<span class="syntax--meta syntax--delimiter syntax--period">.</span><span class="syntax--variable syntax--other syntax--object syntax--property syntax--unquoted">length</span> <span class="syntax--keyword syntax--operator syntax--js">===</span> <span class="syntax--constant syntax--numeric">0</span><span class="syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round">)</span> <span class="syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly">{</span></span></span></div><div class="line" data-screen-row="2"><span class=""><span class="syntax--source syntax--js"><span class="leading-whitespace">        </span><span class="syntax--keyword syntax--control">return</span> <span class="syntax--punctuation syntax--definition syntax--array syntax--begin syntax--bracket syntax--square">[</span><span class="syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly">{</span><span class="syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly">}</span><span class="syntax--punctuation syntax--definition syntax--array syntax--end syntax--bracket syntax--square">]</span><span class="syntax--punctuation syntax--terminator syntax--statement syntax--semicolon">;</span></span></span></div><div class="line" data-screen-row="3"><span class=""><span class="syntax--source syntax--js"><span class="leading-whitespace">    </span><span class="syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly">}</span></span></span></div><div class="line" data-screen-row="4"><span class=""><span class="syntax--source syntax--js"><span class="leading-whitespace">    </span><span class="syntax--storage syntax--modifier">const</span> animalMaxX <span class="syntax--keyword syntax--operator syntax--js">=</span> gridSize <span class="syntax--keyword syntax--operator syntax--js">+</span> <span class="syntax--constant syntax--numeric">1</span> <span class="syntax--keyword syntax--operator syntax--js">-</span> animalInfo<span class="syntax--meta syntax--delimiter syntax--period">.</span><span class="syntax--variable syntax--other syntax--object syntax--property syntax--unquoted">animals</span><span class="syntax--punctuation syntax--definition syntax--array syntax--begin syntax--bracket syntax--square">[</span>animals<span class="syntax--punctuation syntax--definition syntax--array syntax--begin syntax--bracket syntax--square">[</span><span class="syntax--constant syntax--numeric">0</span><span class="syntax--punctuation syntax--definition syntax--array syntax--end syntax--bracket syntax--square">]</span><span class="syntax--punctuation syntax--definition syntax--array syntax--end syntax--bracket syntax--square">]</span><span class="syntax--meta syntax--delimiter syntax--period">.</span><span class="syntax--variable syntax--other syntax--object syntax--property syntax--unquoted">width</span><span class="syntax--punctuation syntax--terminator syntax--statement syntax--semicolon">;</span></span></span></div><div class="line" data-screen-row="5"><span class=""><span class="syntax--source syntax--js"><span class="leading-whitespace">    </span><span class="syntax--storage syntax--modifier">const</span> animalMaxY <span class="syntax--keyword syntax--operator syntax--js">=</span> gridSize <span class="syntax--keyword syntax--operator syntax--js">+</span> <span class="syntax--constant syntax--numeric">1</span> <span class="syntax--keyword syntax--operator syntax--js">-</span> animalInfo<span class="syntax--meta syntax--delimiter syntax--period">.</span><span class="syntax--variable syntax--other syntax--object syntax--property syntax--unquoted">animals</span><span class="syntax--punctuation syntax--definition syntax--array syntax--begin syntax--bracket syntax--square">[</span>animals<span class="syntax--punctuation syntax--definition syntax--array syntax--begin syntax--bracket syntax--square">[</span><span class="syntax--constant syntax--numeric">0</span><span class="syntax--punctuation syntax--definition syntax--array syntax--end syntax--bracket syntax--square">]</span><span class="syntax--punctuation syntax--definition syntax--array syntax--end syntax--bracket syntax--square">]</span><span class="syntax--meta syntax--delimiter syntax--period">.</span><span class="syntax--variable syntax--other syntax--object syntax--property syntax--unquoted">height</span><span class="syntax--punctuation syntax--terminator syntax--statement syntax--semicolon">;</span></span></span></div><div class="line" data-screen-row="6"><span class=""><span class="syntax--source syntax--js"><span class="leading-whitespace">    </span><span class="syntax--storage syntax--type">let</span> newGrids <span class="syntax--keyword syntax--operator syntax--js">=</span> <span class="syntax--punctuation syntax--definition syntax--array syntax--begin syntax--bracket syntax--square">[</span><span class="syntax--punctuation syntax--definition syntax--array syntax--end syntax--bracket syntax--square">]</span><span class="syntax--punctuation syntax--terminator syntax--statement syntax--semicolon">;</span></span></span></div><div class="line" data-screen-row="7"><span class=""><span class="syntax--source syntax--js"><span class="leading-whitespace">    </span><span class="syntax--comment syntax--line">// list of grids with the next n-1 animals</span></span></span></div><div class="line" data-screen-row="8"><span class=""><span class="syntax--source syntax--js"><span class="leading-whitespace">    </span><span class="syntax--storage syntax--type">let</span> partialGrids <span class="syntax--keyword syntax--operator syntax--js">=</span> <span class="syntax--entity syntax--name syntax--function">getPossibleGrids</span><span class="syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round">(</span>animals<span class="syntax--meta syntax--delimiter syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">slice</span><span class="syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--constant syntax--numeric">1</span><span class="syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--terminator syntax--statement syntax--semicolon">;</span></span></span></div><div class="line" data-screen-row="9"><span class=""><span class="syntax--source syntax--js"><span class="leading-whitespace">    </span>partialGrids<span class="syntax--meta syntax--delimiter syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">forEach</span><span class="syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--variable syntax--parameter syntax--function">grid</span> <span class="syntax--storage syntax--type syntax--function syntax--arrow">=&gt;</span> <span class="syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly">{</span></span></span></div><div class="line" data-screen-row="10"><span class=""><span class="syntax--source syntax--js"><span class="leading-whitespace">        </span><span class="syntax--keyword syntax--control">for</span> <span class="syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--storage syntax--type">let</span> topX <span class="syntax--keyword syntax--operator syntax--js">=</span> <span class="syntax--constant syntax--numeric">0</span><span class="syntax--punctuation syntax--terminator syntax--statement syntax--semicolon">;</span> topX <span class="syntax--keyword syntax--operator syntax--js">&lt;</span> animalMaxX<span class="syntax--punctuation syntax--terminator syntax--statement syntax--semicolon">;</span> topX<span class="syntax--keyword syntax--operator syntax--js">++</span><span class="syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round">)</span> <span class="syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly">{</span></span></span></div><div class="line" data-screen-row="11"><span class=""><span class="syntax--source syntax--js"><span class="leading-whitespace">            </span><span class="syntax--keyword syntax--control">for</span> <span class="syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--storage syntax--type">let</span> topY <span class="syntax--keyword syntax--operator syntax--js">=</span> <span class="syntax--constant syntax--numeric">0</span><span class="syntax--punctuation syntax--terminator syntax--statement syntax--semicolon">;</span> topY <span class="syntax--keyword syntax--operator syntax--js">&lt;</span> animalMaxY<span class="syntax--punctuation syntax--terminator syntax--statement syntax--semicolon">;</span> topY<span class="syntax--keyword syntax--operator syntax--js">++</span><span class="syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round">)</span> <span class="syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly">{</span></span></span></div><div class="line" data-screen-row="12"><span class=""><span class="syntax--source syntax--js"><span class="leading-whitespace">                </span><span class="syntax--storage syntax--type">let</span> g <span class="syntax--keyword syntax--operator syntax--js">=</span> <span class="syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly">{</span><span class="syntax--keyword syntax--operator syntax--spread syntax--js">...</span>grid<span class="syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly">}</span><span class="syntax--punctuation syntax--terminator syntax--statement syntax--semicolon">;</span></span></span></div><div class="line" data-screen-row="13"><span class=""><span class="syntax--source syntax--js"><span class="leading-whitespace">                </span>g<span class="syntax--punctuation syntax--definition syntax--array syntax--begin syntax--bracket syntax--square">[</span>animals<span class="syntax--punctuation syntax--definition syntax--array syntax--begin syntax--bracket syntax--square">[</span><span class="syntax--constant syntax--numeric">0</span><span class="syntax--punctuation syntax--definition syntax--array syntax--end syntax--bracket syntax--square">]</span><span class="syntax--punctuation syntax--definition syntax--array syntax--end syntax--bracket syntax--square">]</span> <span class="syntax--keyword syntax--operator syntax--js">=</span> <span class="syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly">{</span><span class="syntax--variable syntax--other syntax--object syntax--property">x</span><span class="syntax--keyword syntax--operator syntax--js">:</span> topX<span class="syntax--meta syntax--delimiter syntax--comma">,</span> <span class="syntax--variable syntax--other syntax--object syntax--property">y</span><span class="syntax--keyword syntax--operator syntax--js">:</span> topY<span class="syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly">}</span><span class="syntax--punctuation syntax--terminator syntax--statement syntax--semicolon">;</span></span></span></div><div class="line" data-screen-row="14"><span class=""><span class="syntax--source syntax--js"><span class="leading-whitespace">                </span><span class="syntax--keyword syntax--control">if</span> <span class="syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--entity syntax--name syntax--function">checkGrid</span><span class="syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round">(</span>g<span class="syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round">)</span> <span class="syntax--punctuation syntax--definition syntax--function syntax--body syntax--begin syntax--bracket syntax--curly">{</span> <span class="syntax--comment syntax--line">// checks if the grid is valid</span></span></span></div><div class="line" data-screen-row="15"><span class=""><span class="syntax--source syntax--js"><span class="leading-whitespace">                    </span>newGrids<span class="syntax--meta syntax--delimiter syntax--period">.</span><span class="syntax--entity syntax--name syntax--function">push</span><span class="syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--bracket syntax--round">(</span>g<span class="syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--terminator syntax--statement syntax--semicolon">;</span></span></span></div><div class="line" data-screen-row="16"><span class=""><span class="syntax--source syntax--js"><span class="leading-whitespace">                </span><span class="syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly">}</span></span></span></div><div class="line" data-screen-row="17"><span class=""><span class="syntax--source syntax--js"><span class="leading-whitespace">            </span><span class="syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly">}</span></span></span></div><div class="line" data-screen-row="18"><span class=""><span class="syntax--source syntax--js"><span class="leading-whitespace">        </span><span class="syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly">}</span></span></span></div><div class="line" data-screen-row="19"><span class=""><span class="syntax--source syntax--js"><span class="leading-whitespace">    </span><span class="syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly">}</span><span class="syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--bracket syntax--round">)</span><span class="syntax--punctuation syntax--terminator syntax--statement syntax--semicolon">;</span></span></span></div><div class="line" data-screen-row="20"><span class=""><span class="syntax--source syntax--js"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">return</span> newGrids<span class="syntax--punctuation syntax--terminator syntax--statement syntax--semicolon">;</span></span></span></div><div class="line" data-screen-row="21"><span class=""><span class="syntax--source syntax--js"><span class="syntax--punctuation syntax--definition syntax--function syntax--body syntax--end syntax--bracket syntax--curly">}</span><span class="syntax--punctuation syntax--terminator syntax--statement syntax--semicolon">;</span></span></span></div></pre>`;

export {DiscoZooGridCode};