const TransformCode = `<pre class="syntax--editor syntax--editor-colors"><div class="line" data-screen-row="0"><span class=""><span class="syntax--source syntax--go"><span class="syntax--comment syntax--block">// maintains a previous state to save on creating a new array each transform</span></span></span></div><div class="line" data-screen-row="1"><span class=""><span class="syntax--source syntax--go"><span class="syntax--keyword syntax--function">func</span> (cube <span class="syntax--keyword syntax--operator">*</span><span class="syntax--support syntax--storage syntax--type">Cube</span>) <span class="syntax--entity syntax--name syntax--function">applyTransformMap</span>(transformMap <span class="syntax--keyword syntax--map">map</span>[<span class="syntax--support syntax--storage syntax--type">int</span>]<span class="syntax--support syntax--storage syntax--type">int</span>) {</span></span></div><div class="line" data-screen-row="2"><span class=""><span class="syntax--source syntax--go"><span class="hard-tab leading-whitespace">    </span><span class="syntax--keyword syntax--control">for</span> i <span class="syntax--keyword syntax--operator">:=</span> <span class="syntax--constant syntax--numeric syntax--integer">0</span>; i <span class="syntax--keyword syntax--operator">&lt;</span> <span class="syntax--constant syntax--numeric syntax--integer">54</span>; i<span class="syntax--keyword syntax--operator">++</span> {</span></span></div><div class="line" data-screen-row="3"><span class=""><span class="syntax--source syntax--go"><span class="hard-tab leading-whitespace">    </span><span class="hard-tab leading-whitespace">    </span>newIndex, exists <span class="syntax--keyword syntax--operator">:=</span> transformMap[i]</span></span></div><div class="line" data-screen-row="4"><span class=""><span class="syntax--source syntax--go"><span class="hard-tab leading-whitespace">    </span><span class="hard-tab leading-whitespace">    </span><span class="syntax--keyword syntax--control">if</span> exists {</span></span></div><div class="line" data-screen-row="5"><span class=""><span class="syntax--source syntax--go"><span class="hard-tab leading-whitespace">    </span><span class="hard-tab leading-whitespace">    </span><span class="hard-tab leading-whitespace">    </span><span class="syntax--comment syntax--block">// position is transformed in transform map</span></span></span></div><div class="line" data-screen-row="6"><span class=""><span class="syntax--source syntax--go"><span class="hard-tab leading-whitespace">    </span><span class="hard-tab leading-whitespace">    </span><span class="hard-tab leading-whitespace">    </span>cube.<span class="syntax--variable syntax--other syntax--object syntax--property">previousLayout</span>[newIndex] <span class="syntax--keyword syntax--operator">=</span> cube.<span class="syntax--variable syntax--other syntax--object syntax--property">Layout</span>[i]</span></span></div><div class="line" data-screen-row="7"><span class=""><span class="syntax--source syntax--go"><span class="hard-tab leading-whitespace">    </span><span class="hard-tab leading-whitespace">    </span>} <span class="syntax--keyword syntax--control">else</span> {</span></span></div><div class="line" data-screen-row="8"><span class=""><span class="syntax--source syntax--go"><span class="hard-tab leading-whitespace">    </span><span class="hard-tab leading-whitespace">    </span><span class="hard-tab leading-whitespace">    </span><span class="syntax--comment syntax--block">// this position is not changed, keep position constant</span></span></span></div><div class="line" data-screen-row="9"><span class=""><span class="syntax--source syntax--go"><span class="hard-tab leading-whitespace">    </span><span class="hard-tab leading-whitespace">    </span><span class="hard-tab leading-whitespace">    </span>cube.<span class="syntax--variable syntax--other syntax--object syntax--property">previousLayout</span>[i] <span class="syntax--keyword syntax--operator">=</span> cube.<span class="syntax--variable syntax--other syntax--object syntax--property">Layout</span>[i]</span></span></div><div class="line" data-screen-row="10"><span class=""><span class="syntax--source syntax--go"><span class="hard-tab leading-whitespace">    </span><span class="hard-tab leading-whitespace">    </span>}</span></span></div><div class="line" data-screen-row="11"><span class=""><span class="syntax--source syntax--go"><span class="hard-tab leading-whitespace">    </span>}</span></span></div><div class="line" data-screen-row="12"><span class=""><span class="syntax--source syntax--go"><span class="hard-tab leading-whitespace">    </span><span class="syntax--comment syntax--block">// swaps old state and new state</span></span></span></div><div class="line" data-screen-row="13"><span class=""><span class="syntax--source syntax--go"><span class="hard-tab leading-whitespace">    </span>cube.<span class="syntax--variable syntax--other syntax--object syntax--property">previousLayout</span>, cube.<span class="syntax--variable syntax--other syntax--object syntax--property">Layout</span> <span class="syntax--keyword syntax--operator">=</span> cube.<span class="syntax--variable syntax--other syntax--object syntax--property">Layout</span>, cube.<span class="syntax--variable syntax--other syntax--object syntax--property">previousLayout</span></span></span></div><div class="line" data-screen-row="14"><span class=""><span class="syntax--source syntax--go">}</span></span></div></pre>`;

export {TransformCode}