const WordleScoringCode = `<pre class="syntax--editor syntax--editor-colors"><div class="line" data-screen-row="0"><span class=""><span class="syntax--source syntax--python"><span class="syntax--comment syntax--line"># scores a word given the frequency of each letter in each position</span></span></span></div><div class="line" data-screen-row="1"><span class=""><span class="syntax--source syntax--python"><span class="syntax--storage syntax--type syntax--function">def</span> <span class="syntax--entity syntax--name syntax--function syntax--definition">scoreWord</span><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--variable syntax--parameter syntax--function">word</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--variable syntax--parameter syntax--function">counts</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span>:</span></span></div><div class="line" data-screen-row="2"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span>score <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--constant syntax--numeric">0</span></span></span></div><div class="line" data-screen-row="3"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">for</span> i<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> c <span class="syntax--keyword syntax--operator syntax--logical syntax--python">in</span> <span class="syntax--support syntax--function syntax--call">enumerate</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>word<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span>:</span></span></div><div class="line" data-screen-row="4"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span>score <span class="syntax--keyword syntax--operator">+=</span> counts<span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span>i<span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span><span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span>c<span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span></span></span></div><div class="line" data-screen-row="5"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">return</span> score</span></span></div><div class="line" data-screen-row="6"><span class=""><span class="syntax--source syntax--python"><span class="trailing-whitespace"> </span></span></span></div><div class="line" data-screen-row="7"><span class=""><span class="syntax--source syntax--python"><span class="syntax--comment syntax--line"># counts the frequency of each letter in each position</span></span></span></div><div class="line" data-screen-row="8"><span class=""><span class="syntax--source syntax--python"><span class="syntax--comment syntax--line"># and returns the word corresponding to the highest score</span></span></span></div><div class="line" data-screen-row="9"><span class=""><span class="syntax--source syntax--python"><span class="syntax--storage syntax--type syntax--function">def</span> <span class="syntax--entity syntax--name syntax--function syntax--definition">wordle</span><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--variable syntax--parameter syntax--function">wordList</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span>:</span></span></div><div class="line" data-screen-row="10"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span>counts <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span><span class="syntax--punctuation syntax--section syntax--block syntax--begin syntax--bracket syntax--curly">{</span><span class="syntax--punctuation syntax--section syntax--block syntax--end syntax--bracket syntax--curly">}</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--punctuation syntax--section syntax--block syntax--begin syntax--bracket syntax--curly">{</span><span class="syntax--punctuation syntax--section syntax--block syntax--end syntax--bracket syntax--curly">}</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--punctuation syntax--section syntax--block syntax--begin syntax--bracket syntax--curly">{</span><span class="syntax--punctuation syntax--section syntax--block syntax--end syntax--bracket syntax--curly">}</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--punctuation syntax--section syntax--block syntax--begin syntax--bracket syntax--curly">{</span><span class="syntax--punctuation syntax--section syntax--block syntax--end syntax--bracket syntax--curly">}</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--punctuation syntax--section syntax--block syntax--begin syntax--bracket syntax--curly">{</span><span class="syntax--punctuation syntax--section syntax--block syntax--end syntax--bracket syntax--curly">}</span><span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span></span></span></div><div class="line" data-screen-row="11"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">for</span> word <span class="syntax--keyword syntax--operator syntax--logical syntax--python">in</span> wordList:</span></span></div><div class="line" data-screen-row="12"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--keyword syntax--control">for</span> i<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> c <span class="syntax--keyword syntax--operator syntax--logical syntax--python">in</span> <span class="syntax--support syntax--function syntax--call">enumerate</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>word<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span>: <span class="syntax--comment syntax--line"># character c in position i</span></span></span></div><div class="line" data-screen-row="13"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span>counts<span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span>i<span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span><span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span>c<span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span> <span class="syntax--keyword syntax--operator">=</span> counts<span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span>i<span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span>.<span class="syntax--entity syntax--name syntax--function">get</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>c<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--constant syntax--numeric">0</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span> <span class="syntax--keyword syntax--operator">+</span> <span class="syntax--constant syntax--numeric">1</span> <span class="syntax--comment syntax--line"># increased the count by 1</span></span></span></div><div class="line" data-screen-row="14"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">return</span> <span class="syntax--support syntax--function syntax--call">max</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>wordList<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--variable syntax--parameter syntax--function">key</span><span class="syntax--keyword syntax--operator">=</span><span class="syntax--storage syntax--type syntax--function">lambda</span> <span class="syntax--variable syntax--parameter syntax--function">word</span>: <span class="syntax--entity syntax--name syntax--function syntax--call">scoreWord</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>word<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> counts<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div></pre>`;

const WordleScoringIgnoreCode = `<pre class="syntax--editor syntax--editor-colors"><div class="line" data-screen-row="0"><span class=""><span class="syntax--source syntax--python"><span class="syntax--comment syntax--line"># scores a word given the frequency of each letter in each position.</span></span></span></div><div class="line" data-screen-row="1"><span class=""><span class="syntax--source syntax--python"><span class="syntax--comment syntax--line"># decreases score on repeated letters to get larger coverage of letters</span></span></span></div><div class="line" data-screen-row="2"><span class=""><span class="syntax--source syntax--python"><span class="syntax--storage syntax--type syntax--function">def</span> <span class="syntax--entity syntax--name syntax--function syntax--definition">scoreWordIgnore</span><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--variable syntax--parameter syntax--function">word</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--variable syntax--parameter syntax--function">counts</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span>:</span></span></div><div class="line" data-screen-row="3"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span>score <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--constant syntax--numeric">0</span></span></span></div><div class="line" data-screen-row="4"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">for</span> i<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> c <span class="syntax--keyword syntax--operator syntax--logical syntax--python">in</span> <span class="syntax--support syntax--function syntax--call">enumerate</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>word<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span>:</span></span></div><div class="line" data-screen-row="5"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span>score <span class="syntax--keyword syntax--operator">+=</span> counts<span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span>i<span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span><span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span>c<span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span> <span class="syntax--keyword syntax--operator">//</span> <span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>word.<span class="syntax--entity syntax--name syntax--function">count</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>c<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></div><div class="line" data-screen-row="6"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">return</span> score</span></span></div><div class="line" data-screen-row="7"><span class=""><span class="syntax--source syntax--python"><span class="trailing-whitespace"> </span></span></span></div><div class="line" data-screen-row="8"><span class=""><span class="syntax--source syntax--python"><span class="syntax--comment syntax--line"># counts the frequency of each letter in each position ignoring the set of letters</span></span></span></div><div class="line" data-screen-row="9"><span class=""><span class="syntax--source syntax--python"><span class="syntax--comment syntax--line"># information is already known about and returns the highest scoring word</span></span></span></div><div class="line" data-screen-row="10"><span class=""><span class="syntax--source syntax--python"><span class="syntax--storage syntax--type syntax--function">def</span> <span class="syntax--entity syntax--name syntax--function syntax--definition">wordleIgnore</span><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span><span class="syntax--variable syntax--parameter syntax--function">wordList</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--variable syntax--parameter syntax--function">ignore</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span>:</span></span></div><div class="line" data-screen-row="11"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span>counts <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span><span class="syntax--punctuation syntax--section syntax--block syntax--begin syntax--bracket syntax--curly">{</span><span class="syntax--punctuation syntax--section syntax--block syntax--end syntax--bracket syntax--curly">}</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--punctuation syntax--section syntax--block syntax--begin syntax--bracket syntax--curly">{</span><span class="syntax--punctuation syntax--section syntax--block syntax--end syntax--bracket syntax--curly">}</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--punctuation syntax--section syntax--block syntax--begin syntax--bracket syntax--curly">{</span><span class="syntax--punctuation syntax--section syntax--block syntax--end syntax--bracket syntax--curly">}</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--punctuation syntax--section syntax--block syntax--begin syntax--bracket syntax--curly">{</span><span class="syntax--punctuation syntax--section syntax--block syntax--end syntax--bracket syntax--curly">}</span><span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--punctuation syntax--section syntax--block syntax--begin syntax--bracket syntax--curly">{</span><span class="syntax--punctuation syntax--section syntax--block syntax--end syntax--bracket syntax--curly">}</span><span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span></span></span></div><div class="line" data-screen-row="12"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">for</span> word <span class="syntax--keyword syntax--operator syntax--logical syntax--python">in</span> wordList:</span></span></div><div class="line" data-screen-row="13"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--keyword syntax--control">for</span> i<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> c <span class="syntax--keyword syntax--operator syntax--logical syntax--python">in</span> <span class="syntax--support syntax--function syntax--call">enumerate</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>word<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span>:</span></span></div><div class="line" data-screen-row="14"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span>counts<span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span>i<span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span><span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span>c<span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span> <span class="syntax--keyword syntax--operator">=</span> counts<span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span>i<span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span>.<span class="syntax--entity syntax--name syntax--function">get</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>c<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--constant syntax--numeric">0</span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span> <span class="syntax--keyword syntax--operator">+</span> <span class="syntax--constant syntax--numeric">1</span></span></span></div><div class="line" data-screen-row="15"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">for</span> c <span class="syntax--keyword syntax--operator syntax--logical syntax--python">in</span> ignore:</span></span></div><div class="line" data-screen-row="16"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">        </span><span class="syntax--keyword syntax--control">for</span> count <span class="syntax--keyword syntax--operator syntax--logical syntax--python">in</span> counts:</span></span></div><div class="line" data-screen-row="17"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">            </span>count<span class="syntax--punctuation syntax--definition syntax--begin syntax--bracket syntax--square">[</span>c<span class="syntax--punctuation syntax--definition syntax--end syntax--bracket syntax--square">]</span> <span class="syntax--keyword syntax--operator">=</span> <span class="syntax--constant syntax--numeric">0</span></span></span></div><div class="line" data-screen-row="18"><span class=""><span class="syntax--source syntax--python"><span class="leading-whitespace">    </span><span class="syntax--keyword syntax--control">return</span> <span class="syntax--support syntax--function syntax--call">max</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>wordList<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> <span class="syntax--variable syntax--parameter syntax--function">key</span><span class="syntax--keyword syntax--operator">=</span><span class="syntax--storage syntax--type syntax--function">lambda</span> <span class="syntax--variable syntax--parameter syntax--function">word</span>: <span class="syntax--entity syntax--name syntax--function syntax--call">scoreWordIgnore</span><span class="syntax--meta syntax--method-call syntax--python"><span class="syntax--punctuation syntax--section syntax--parens syntax--begin syntax--bracket syntax--round">(</span>word<span class="syntax--punctuation syntax--separator syntax--delimiter">,</span> counts<span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span><span class="syntax--punctuation syntax--section syntax--parens syntax--end syntax--bracket syntax--round">)</span></span></span></span></div></pre>`;

export {WordleScoringCode, WordleScoringIgnoreCode};